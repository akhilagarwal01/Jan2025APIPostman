{
	"info": {
		"_postman_id": "dbed383c-2dfb-4739-883f-c5483a5cb6a1",
		"name": "ContactsAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28623978"
	},
	"item": [
		{
			"name": "Login User - Get token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"const tokenId = response.token;\r",
							"console.log(\"My tokenId : \" + tokenId);\r",
							"const token = \"Bearer \" + tokenId;\r",
							"pm.collectionVariables.set(\"myTokenId\", token)\r",
							"\r",
							"pm.test(\"Response code for api should be 200\", function() {\r",
							"    pm.response.to.have.status(200)\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"loveallakhil12@gmail.com\",\r\n    \"password\": \"password\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/users/login",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"users",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetAllContacts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseBody = pm.response.json();\r",
							"pm.collectionVariables.set(\"first_id\", responseBody[0]._id)\r",
							"\r",
							"\r",
							"pm.test(\"Response code for api should be 200\", function() {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"User getting multiple records\", function() {\r",
							"    pm.expect(responseBody.length).to.be.greaterThan(1)\r",
							"\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{myTokenId}}"
					}
				],
				"url": {
					"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts",
					"protocol": "https",
					"host": [
						"thinking-tester-contact-list",
						"herokuapp",
						"com"
					],
					"path": [
						"contacts"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetContact",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseBody = pm.response.json();\r",
							"console.log(\"this is resposne body : \", responseBody)\r",
							"\r",
							"pm.test(\"Response code for api should be 200\", function() {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"User getting multiple records\", function() {\r",
							"    pm.expect(responseBody).to.have.property(\"_id\")\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{myTokenId}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{first_id}}",
					"protocol": "https",
					"host": [
						"thinking-tester-contact-list",
						"herokuapp",
						"com"
					],
					"path": [
						"contacts",
						"{{first_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a Contact",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseBody = pm.response.json();\r",
							"\r",
							"pm.test(\"Response code for api should be 201\", function() {\r",
							"    pm.response.to.have.status(201)\r",
							"})\r",
							"\r",
							"\r",
							"const raw = pm.request.body.raw\r",
							"const reqBody = JSON.parse(raw)\r",
							"const phn = reqBody.phone;\r",
							"\r",
							"console.log(\"This is the tested phn no \",phn)\r",
							"\r",
							"pm.test(\"User record created with correct phn no\", function() {\r",
							"    pm.expect(responseBody.phone).to.be.eql(phn)\r",
							"\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{myTokenId}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"birthdate\": \"1970-01-01\",\r\n    \"email\": \"jdoe@fake.com\",\r\n    \"phone\": \"8005555555\",\r\n    \"street1\": \"1 Main St.\",\r\n    \"street2\": \"Apartment A\",\r\n    \"city\": \"Anytown\",\r\n    \"stateProvince\": \"KS\",\r\n    \"postalCode\": \"12345\",\r\n    \"country\": \"China\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts",
					"protocol": "https",
					"host": [
						"thinking-tester-contact-list",
						"herokuapp",
						"com"
					],
					"path": [
						"contacts"
					]
				}
			},
			"response": []
		},
		{
			"name": "update a contact",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseBody = pm.response.json();\r",
							"\r",
							"pm.test(\"Response code for api should be 200\", function() {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"\r",
							"const raw = pm.request.body.raw\r",
							"const reqBody = JSON.parse(raw)\r",
							"const country = reqBody.country;\r",
							"\r",
							"console.log(\"This is the updated country \",country)\r",
							"\r",
							"pm.test(\"User record updated with correct country\", function() {\r",
							"    pm.expect(responseBody.country).to.be.eql(country)\r",
							"\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{myTokenId}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"birthdate\": \"1970-01-01\",\n    \"email\": \"jdoe@fake.com\",\n    \"phone\": \"8005555555\",\n    \"street1\": \"1 Main St.\",\n    \"street2\": \"Apartment A\",\n    \"city\": \"\",\n    \"stateProvince\": \"KS\",\n    \"postalCode\": \"12345\",\n    \"country\": \"USA\"\n}"
				},
				"url": {
					"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{first_id}}",
					"protocol": "https",
					"host": [
						"thinking-tester-contact-list",
						"herokuapp",
						"com"
					],
					"path": [
						"contacts",
						"{{first_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a contact",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response code for api should be 200\", function() {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{myTokenId}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://thinking-tester-contact-list.herokuapp.com/contacts/{{first_id}}",
					"protocol": "https",
					"host": [
						"thinking-tester-contact-list",
						"herokuapp",
						"com"
					],
					"path": [
						"contacts",
						"{{first_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout user",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{myTokenId}}"
					}
				],
				"url": {
					"raw": "https://thinking-tester-contact-list.herokuapp.com/users/logout",
					"protocol": "https",
					"host": [
						"thinking-tester-contact-list",
						"herokuapp",
						"com"
					],
					"path": [
						"users",
						"logout"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "myTokenId",
			"value": ""
		},
		{
			"key": "first_id",
			"value": ""
		}
	]
}